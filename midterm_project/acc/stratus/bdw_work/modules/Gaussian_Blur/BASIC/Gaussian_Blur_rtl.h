// Generated by stratus_hls 19.12-s100  (91710.131054)
// Thu May  6 05:30:13 2021
// from ../Gaussian_Blur.cpp
#ifndef CYNTH_PART_Gaussian_Blur_Gaussian_Blur_rtl_h
#define CYNTH_PART_Gaussian_Blur_Gaussian_Blur_rtl_h

#include "systemc.h"
/* Include declarations of instantiated parts. */
#include "Gaussian_Blur_RAM_774X25_3.h"
#include "Gaussian_Blur_ROM_9X9_filter_const.h"
#include "Gaussian_Blur_RAM_9X9_2.h"


/* Declaration of the synthesized module. */
struct Gaussian_Blur : public sc_module {
  sc_in<bool > i_clk;
  sc_in<bool > i_rst;
  sc_out<bool > i_rgb_busy;
  sc_in<bool > i_rgb_vld;
  sc_in<sc_int<25> > i_rgb_data;
  sc_in<bool > o_result_busy;
  sc_out<bool > o_result_vld;
  sc_out<sc_int<32> > o_result_data;
  Gaussian_Blur( sc_module_name name );
  SC_HAS_PROCESS(Gaussian_Blur);
  sc_signal<bool > o_result_m_req_m_prev_trig_req;
  sc_signal<sc_uint<1> > Gaussian_Blur_Xor_1Ux1U_1U_1_1_out1;
  sc_signal<bool > o_result_m_unacked_req;
  sc_signal<sc_uint<1> > Gaussian_Blur_Or_1Ux1U_1U_4_2_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_N_Muxb_1_2_2_4_4_out1;
  sc_signal<bool > i_rgb_m_unvalidated_req;
  sc_signal<sc_uint<1> > 
  Gaussian_Blur_gen_busy_r_4_70_gen_busy_i_rgb_m_data_is_invalid_next;
  sc_signal<sc_uint<1> > Gaussian_Blur_gen_busy_r_4_70_gdiv;
  sc_signal<sc_uint<1> > Gaussian_Blur_gen_busy_r_4_70_gnew_req;
  sc_signal<sc_uint<9> > global_state_next;
  sc_signal<sc_uint<1> > Gaussian_Blur_N_Mux_11_2_1_4_65_ctrl1;
  sc_signal<sc_int<11> > Gaussian_Blur_Add_10Sx9S_11S_4_64_out1;
  sc_signal<sc_int<11> > Gaussian_Blur_Minus_11U_11S_4_63_out1;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_62_out1;
  sc_signal<sc_uint<11> > Gaussian_Blur_Abs_11S_11U_4_60_out1;
  sc_signal<sc_int<11> > Gaussian_Blur_Add_10Sx9S_11S_4_59_out1;
  sc_signal<sc_int<9> > Gaussian_Blur_Mul_9Sx8U_9S_4_55_out1;
  sc_signal<sc_uint<8> > Gaussian_Blur_Mul_9Sx8U_9S_4_55_in1;
  sc_signal<sc_int<9> > Gaussian_Blur_Mul_9Sx8U_9S_4_52_out1;
  sc_signal<sc_uint<8> > Gaussian_Blur_Mul_9Sx8U_9S_4_52_in1;
  sc_signal<sc_int<9> > Gaussian_Blur_Mul_9Sx8U_9S_4_51_out1;
  sc_signal<sc_uint<4> > Gaussian_Blur_Mul_2Ux2U_4U_4_44_out1;
  sc_signal<sc_uint<2> > Gaussian_Blur_Add_3Sx2U_4S_4_43_in1;
  sc_signal<sc_uint<2> > Gaussian_Blur_Add_3Ux2U_4U_4_37_in1;
  sc_signal<sc_uint<1> > gs_ctrl21;
  sc_signal<sc_uint<10> > Gaussian_Blur_Add_10Ux10U_10U_4_33_in1;
  sc_signal<sc_int<2> > Gaussian_Blur_Add_9Sx9S_10S_4_32_in1_slice;
  sc_signal<sc_uint<1> > gs_ctrl19;
  sc_signal<sc_int<8> > Gaussian_Blur_Add_9Sx9S_10S_4_30_in2_slice;
  sc_signal<sc_uint<1> > gs_ctrl18;
  sc_signal<sc_uint<1> > Gaussian_Blur_N_Mux_2_2_0_4_29_ctrl1;
  sc_signal<sc_int<2> > Gaussian_Blur_Minus_2U_2S_4_28_out1;
  sc_signal<sc_uint<2> > Gaussian_Blur_Mod_32Ux2U_2U_4_27_out1;
  sc_signal<sc_uint<32> > Gaussian_Blur_Abs_32S_32U_1_26_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_NotEQ_32Sx1S_1U_4_24_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_NotEQ_32Sx9S_1U_4_23_out1;
  sc_signal<sc_int<32> > Gaussian_Blur_NotEQ_32Sx9S_1U_4_23_in2;
  sc_signal<sc_uint<1> > gs_ctrl14;
  sc_signal<sc_uint<2> > Gaussian_Blur_Add_3Sx2U_4S_4_19_in1;
  sc_signal<sc_uint<1> > gs_ctrl13;
  sc_signal<sc_int<9> > Gaussian_Blur_Add_9Sx9S_10S_4_17_in2;
  sc_signal<sc_uint<2> > gs_ctrl12;
  sc_signal<sc_uint<3> > gs_ctrl11;
  sc_signal<sc_uint<1> > gs_ctrl10;
  sc_signal<sc_uint<10> > Gaussian_Blur_Add_10Ux10U_10U_4_22_out1;
  sc_signal<sc_uint<10> > Gaussian_Blur_Add_10Ux10U_10U_4_33_out1;
  sc_signal<sc_uint<10> > Gaussian_Blur_Add_10Ux10U_10U_4_16_out1;
  sc_signal<sc_int<8> > Gaussian_Blur_Add_9Sx9S_10S_4_15_in2_slice;
  sc_signal<sc_uint<1> > gs_ctrl9;
  sc_signal<sc_uint<2> > Gaussian_Blur_Mul_9Ux2U_10U_4_14_in1;
  sc_signal<sc_uint<3> > gs_ctrl8;
  sc_signal<sc_uint<1> > gs_ctrl7;
  sc_signal<sc_uint<3> > gs_ctrl6;
  sc_signal<sc_uint<2> > gs_ctrl5;
  sc_signal<sc_uint<4> > gs_ctrl4;
  sc_signal<sc_uint<4> > Gaussian_Blur_Add_3Ux2U_4U_4_37_out1;
  sc_signal<sc_uint<3> > Gaussian_Blur_Add_2Ux2U_3U_4_41_out1;
  sc_signal<sc_uint<4> > Gaussian_Blur_Add_3Ux2U_4U_4_40_out1;
  sc_signal<sc_int<5> > Gaussian_Blur_Add_5Sx2U_5S_4_11_out1;
  sc_signal<sc_int<5> > Gaussian_Blur_Add_5Sx2U_5S_4_9_out1;
  sc_signal<sc_uint<2> > Gaussian_Blur_Add_5Sx2U_5S_4_9_in1;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_5Sx2U_5S_4_9_in2_slice;
  sc_signal<sc_uint<2> > Gaussian_Blur_Add_3Sx2U_4S_4_6_in1;
  sc_signal<sc_uint<1> > gs_ctrl0;
  sc_signal<sc_int<5> > Gaussian_Blur_Add_5Sx2U_5S_4_45_out1;
  sc_signal<sc_uint<4> > s_reg_72;
  sc_signal<sc_uint<9> > Gaussian_Blur_Add_9Ux9U_9U_4_56_out1;
  sc_signal<sc_uint<9> > s_reg_71;
  sc_signal<sc_uint<9> > Gaussian_Blur_Add_9Ux9U_9U_4_54_out1;
  sc_signal<sc_uint<9> > s_reg_70;
  sc_signal<sc_uint<9> > Gaussian_Blur_Add_9Ux9U_9U_4_53_out1;
  sc_signal<sc_uint<9> > s_reg_69;
  sc_signal<sc_int<8> > s_reg_68_slice1;
  sc_signal<sc_uint<32> > s_reg_67;
  sc_signal<sc_uint<11> > Gaussian_Blur_Div_11Ux2U_11U_4_61_out1;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_15_out1;
  sc_signal<sc_uint<11> > s_reg_66;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_58_out1;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_30_out1;
  sc_signal<sc_uint<10> > Gaussian_Blur_Mul_9Ux2U_10U_4_14_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_LessThan_4Sx3S_1U_4_12_out1;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_42_out1;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_32_out1;
  sc_signal<sc_uint<2> > Gaussian_Blur_N_Mux_2_2_0_4_29_out1;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_19_out1;
  sc_signal<sc_uint<4> > Gaussian_Blur_Mul_2Ux2U_4U_4_8_out1;
  sc_signal<sc_uint<4> > s_reg_62;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_43_out1;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_6_out1;
  sc_signal<sc_uint<4> > s_reg_61;
  sc_signal<sc_uint<1> > Gaussian_Blur_Equal_1Ux1U_1U_1_1_out1;
  sc_signal<sc_int<32> > Gaussian_Blur_Add_32Sx2S_32S_1_66_out1;
  sc_signal<bool > drain;
  sc_signal<sc_int<4> > u_u0_mi51;
  sc_signal<sc_uint<1> > cycle2_state;
  sc_signal<sc_uint<1> > cycle1_state;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_10_out1;
  sc_signal<sc_uint<3> > Gaussian_Blur_gen_busy_r_4_70_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_And_1Ux1U_1U_4_68_out1;
  sc_signal<sc_uint<1> > Gaussian_Blur_Not_1U_1U_1_3_out1;
  sc_signal<bool > o_result_m_req_m_trig_req;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_67_out1;
  sc_signal<sc_uint<10> > s_reg_65;
  sc_signal<sc_uint<4> > s_reg_63;
  sc_signal<sc_uint<1> > Gaussian_Blur_And_1Ux1U_1U_4_25_out1;
  sc_signal<sc_int<4> > Gaussian_Blur_Add_3Sx2U_4S_4_18_out1;
  sc_signal<sc_int<10> > Gaussian_Blur_Add_9Sx9S_10S_4_17_out1;
  sc_signal<sc_uint<1> > s_reg_64;
  sc_signal<sc_uint<1> > Gaussian_Blur_LessThan_4Sx3S_1U_4_13_out1;
  sc_signal<sc_uint<9> > global_state;
  sc_signal<bool > i_rgb_m_busy_req_0;
  sc_signal<sc_uint<11> > Gaussian_Blur_N_Mux_11_2_1_4_65_out1;
  sc_signal<sc_int<11> > o_result_data_slice;
  sc_signal<sc_uint<1> > stall0;
  sc_signal<sc_uint<9> > filter_DIN;
  sc_signal<sc_uint<1> > filter_CE;
  sc_signal<sc_uint<1> > filter_RW;
  sc_signal<sc_uint<4> > filter_in1;
  sc_signal<sc_uint<9> > filter_out1;
  sc_signal<sc_uint<4> > filter_const_in1;
  sc_signal<sc_uint<9> > filter_const_out1;
  sc_signal<sc_uint<25> > rgb_buffer_DIN;
  sc_signal<sc_uint<1> > rgb_buffer_CE;
  sc_signal<sc_uint<1> > rgb_buffer_RW;
  sc_signal<sc_uint<10> > rgb_buffer_in1;
  sc_signal<sc_uint<25> > rgb_buffer_out1;
  Gaussian_Blur_RAM_774X25_3 *rgb_buffer;
  Gaussian_Blur_ROM_9X9_filter_const *filter_const;
  Gaussian_Blur_RAM_9X9_2 *filter;
  void drive_o_result_data_slice();
  void drive_i_rgb_m_busy_req_0();
  void drive_o_result_m_req_m_trig_req();
  void drive_stall0();
  void drive_u_u0_mi51();
  void drive_drain();
  void drive_s_reg_61();
  void drive_s_reg_62();
  void drive_s_reg_63();
  void drive_s_reg_64();
  void drive_s_reg_65();
  void drive_s_reg_66();
  void drive_s_reg_67();
  void drive_s_reg_68_slice_slice();
  void drive_s_reg_69();
  void drive_s_reg_70();
  void drive_s_reg_71();
  void drive_s_reg_72();
  void drive_Gaussian_Blur_Add_3Sx2U_4S_4_6_in1();
  void Gaussian_Blur_Add_3Sx2U_4S_4_6();
  void Gaussian_Blur_Mul_2Ux2U_4U_4_8();
  void drive_Gaussian_Blur_Add_5Sx2U_5S_4_9_in2_slice();
  void drive_Gaussian_Blur_Add_5Sx2U_5S_4_9_in1();
  void Gaussian_Blur_Add_5Sx2U_5S_4_9();
  void Gaussian_Blur_Add_3Sx2U_4S_4_10();
  void Gaussian_Blur_Add_5Sx2U_5S_4_11();
  void Gaussian_Blur_LessThan_4Sx3S_1U_4_12();
  void drive_filter_const_in1();
  void drive_filter_in1();
  void drive_filter_DIN();
  void drive_filter_CE();
  void drive_filter_RW();
  void Gaussian_Blur_LessThan_4Sx3S_1U_4_13();
  void drive_Gaussian_Blur_Mul_9Ux2U_10U_4_14_in1();
  void Gaussian_Blur_Mul_9Ux2U_10U_4_14();
  void drive_Gaussian_Blur_Add_9Sx9S_10S_4_15_in2_slice();
  void Gaussian_Blur_Add_9Sx9S_10S_4_15();
  void Gaussian_Blur_Add_10Ux10U_10U_4_16();
  void drive_rgb_buffer_in1();
  void drive_rgb_buffer_DIN();
  void drive_rgb_buffer_CE();
  void drive_rgb_buffer_RW();
  void drive_Gaussian_Blur_Add_9Sx9S_10S_4_17_in2();
  void Gaussian_Blur_Add_9Sx9S_10S_4_17();
  void Gaussian_Blur_Add_3Sx2U_4S_4_18();
  void drive_Gaussian_Blur_Add_3Sx2U_4S_4_19_in1();
  void Gaussian_Blur_Add_3Sx2U_4S_4_19();
  void Gaussian_Blur_Add_10Ux10U_10U_4_22();
  void drive_Gaussian_Blur_NotEQ_32Sx9S_1U_4_23_in2();
  void Gaussian_Blur_NotEQ_32Sx9S_1U_4_23();
  void Gaussian_Blur_NotEQ_32Sx1S_1U_4_24();
  void Gaussian_Blur_And_1Ux1U_1U_4_25();
  void Gaussian_Blur_Abs_32S_32U_1_26();
  void Gaussian_Blur_Mod_32Ux2U_2U_4_27();
  void Gaussian_Blur_Minus_2U_2S_4_28();
  void drive_Gaussian_Blur_N_Mux_2_2_0_4_29_ctrl1();
  void Gaussian_Blur_N_Mux_2_2_0_4_29();
  void drive_Gaussian_Blur_Add_9Sx9S_10S_4_30_in2_slice();
  void Gaussian_Blur_Add_9Sx9S_10S_4_30();
  void drive_Gaussian_Blur_Add_9Sx9S_10S_4_32_in1_slice();
  void Gaussian_Blur_Add_9Sx9S_10S_4_32();
  void drive_Gaussian_Blur_Add_10Ux10U_10U_4_33_in1();
  void Gaussian_Blur_Add_10Ux10U_10U_4_33();
  void drive_Gaussian_Blur_Add_3Ux2U_4U_4_37_in1();
  void Gaussian_Blur_Add_3Ux2U_4U_4_37();
  void Gaussian_Blur_Add_2Ux2U_3U_4_41();
  void Gaussian_Blur_Add_3Ux2U_4U_4_40();
  void Gaussian_Blur_Add_3Sx2U_4S_4_42();
  void drive_Gaussian_Blur_Add_3Sx2U_4S_4_43_in1();
  void Gaussian_Blur_Add_3Sx2U_4S_4_43();
  void Gaussian_Blur_Mul_2Ux2U_4U_4_44();
  void Gaussian_Blur_Add_5Sx2U_5S_4_45();
  void Gaussian_Blur_Mul_9Sx8U_9S_4_51();
  void drive_Gaussian_Blur_Mul_9Sx8U_9S_4_52_in1();
  void Gaussian_Blur_Mul_9Sx8U_9S_4_52();
  void Gaussian_Blur_Add_9Ux9U_9U_4_53();
  void Gaussian_Blur_Add_9Ux9U_9U_4_54();
  void drive_Gaussian_Blur_Mul_9Sx8U_9S_4_55_in1();
  void Gaussian_Blur_Mul_9Sx8U_9S_4_55();
  void Gaussian_Blur_Add_9Ux9U_9U_4_56();
  void Gaussian_Blur_Add_9Sx9S_10S_4_58();
  void Gaussian_Blur_Add_10Sx9S_11S_4_59();
  void Gaussian_Blur_Abs_11S_11U_4_60();
  void Gaussian_Blur_Div_11Ux2U_11U_4_61();
  void Gaussian_Blur_Add_9Sx9S_10S_4_62();
  void Gaussian_Blur_Minus_11U_11S_4_63();
  void Gaussian_Blur_Add_10Sx9S_11S_4_64();
  void drive_Gaussian_Blur_N_Mux_11_2_1_4_65_ctrl1();
  void Gaussian_Blur_N_Mux_11_2_1_4_65();
  void Gaussian_Blur_Add_32Sx2S_32S_1_66();
  void Gaussian_Blur_Add_9Sx9S_10S_4_67();
  void Gaussian_Blur_Equal_1Ux1U_1U_1_1();
  void drive_cycle1_state();
  void drive_cycle2_state();
  void drive_global_state();
  void drive_global_state_next();
  void drive_gs_ctrl0();
  void drive_gs_ctrl4();
  void drive_gs_ctrl5();
  void drive_gs_ctrl6();
  void drive_gs_ctrl7();
  void drive_gs_ctrl8();
  void drive_gs_ctrl9();
  void drive_gs_ctrl10();
  void drive_gs_ctrl11();
  void drive_gs_ctrl12();
  void drive_gs_ctrl13();
  void drive_gs_ctrl14();
  void drive_gs_ctrl18();
  void drive_gs_ctrl19();
  void drive_gs_ctrl21();
  void drive_i_rgb_busy();
  void Gaussian_Blur_gen_busy_r_4_70_p8();
  void Gaussian_Blur_gen_busy_r_4_70_p7();
  void Gaussian_Blur_gen_busy_r_4_70_p6();
  void Gaussian_Blur_gen_busy_r_4_70_p5();
  void drive_i_rgb_m_unvalidated_req();
  void Gaussian_Blur_N_Muxb_1_2_2_4_4();
  void drive_o_result_vld();
  void Gaussian_Blur_Or_1Ux1U_1U_4_2();
  void drive_o_result_m_unacked_req();
  void Gaussian_Blur_And_1Ux1U_1U_4_68();
  void Gaussian_Blur_Xor_1Ux1U_1U_1_1();
  void drive_o_result_m_req_m_prev_trig_req();
  void Gaussian_Blur_Not_1U_1U_1_3();
  void drive_o_result_data();
};

#endif
